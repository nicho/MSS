<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<mapper namespace="com.aus.common.dao.IPersonDao">
	
	<resultMap id="PersonMap" type="com.aus.common.model.PersonDto">
		<result column="USER_ID" property="userId" jdbcType="VARCHAR" />
		<result column="USER_ACCOUNT" property="userAccount" jdbcType="VARCHAR" />
		<result column="USER_NAME" property="userName" jdbcType="VARCHAR" />
		<result column="DEPARTMENT_CODE" property="departmentCode" jdbcType="VARCHAR" />
		<result column="DEPARTMENT_NAME" property="departmentName" jdbcType="VARCHAR" />
		<result column="ORG_ID" property="orgId" jdbcType="VARCHAR" />
		<result column="CHANNEL_TYPE" property="channelType" jdbcType="VARCHAR" />
		<result column="CHANNEL_NAME" property="channelName" jdbcType="VARCHAR" />
		<result column="PERSON_ID" property="personId" jdbcType="VARCHAR" />
		<result column="ORG_NAME" property="orgName" jdbcType="VARCHAR" />
		<result column="POSITION_ID" property="positionId" jdbcType="VARCHAR" />
		<result column="POSITION_NAME" property="positionName" jdbcType="VARCHAR" />
		<result column="PROVINCE" property="province" jdbcType="VARCHAR" />
		<result column="BUDGET_PRIVILEGE" property="budgetPrivilege" jdbcType="VARCHAR" />
		<result column="PRIMARY_FLAG" property="primaryFlag" jdbcType="VARCHAR" />
		<result column="JOB_ID" property="jobId" jdbcType="VARCHAR" />
		<result column="EMAIL_ADDRESS" property="emailAddress" jdbcType="VARCHAR" />
		<result column="sex" property="sex" jdbcType="VARCHAR" />
		<result column="MOBILE_PHONE" property="mobilePhone" jdbcType="VARCHAR" />
		<result column="service_start_dateStr" property="service_start_dateStr" jdbcType="VARCHAR" />
		<result column="hight_edu" property="hight_edu" jdbcType="VARCHAR" />
		<result column="age" property="age" jdbcType="VARCHAR" />
		<result column="sexName" property="sexName" jdbcType="VARCHAR" />
		<result column="home_adress" property="home_adress" jdbcType="VARCHAR" />
		<result column="id_card_num" property="id_card_num" jdbcType="VARCHAR" />
		<result column="try_salary_level" property="try_salary_level" jdbcType="VARCHAR" />
	</resultMap>
	   <resultMap id="JobMap" type="com.aus.common.model.Job">
        <result column="JOB_ID" property="jobId" jdbcType="NUMERIC" />
		<result column="JOB_NAME" property="jobName" jdbcType="VARCHAR" />
  </resultMap>
	<select id="getPersonPositionId" resultMap="PersonMap" parameterType="com.aus.common.model.PersonDto">
		SELECT PO.POSITION_ID FROM APPS.CUX_PERSON_ORGANIZATION_V PO WHERE po.PERSON_ID=#{personId} And province=#{departmentCode} 
	</select>
	
	<select id="getPersonOrganization" resultMap="PersonMap" parameterType="com.aus.common.model.PersonDto">
      SELECT DISTINCT    BU.USER_ID                USER_ID,
			       BU.USER_NAME              USER_ACCOUNT,
			       PA.PERSON_ID,
			       PA.PERSON_NAME            USER_NAME,
			       PA.HR_ORGANIZATION_ID DEPARTMENT_CODE,
			       POSI.HR_ORGANIZATION_NAME DEPARTMENT_NAME,
			       POSI.CHANNEL_TYPE,
			       POSI.PROVINCE,
			       CCT.CHANNEL_NAME,
			       POSI.OU_ORGANIZATION_ID   ORG_ID,
			       OU.ORGANIZATION_NAME      ORG_NAME,
			       POSI.POSITION_ID,
			       POSI.POSITION_NAME,
			       POSI.BUDGET_PRIVILEGE,
			       PA.PRIMARY_FLAG,
			       POSI.JOB_ID,
              to_char((SELECT PAP.SERVICE_START_DATE 
	        FROM AUPORTAL.BASE_HR_PERSON_V PAP 
	       WHERE PAP.EFFECTIVE_END_DATE > SYSDATE
	         AND PAP.PERSON_ID =  PA.PERSON_ID),'yyyy-mm-dd') service_start_dateStr 
			  FROM (SELECT *
			          FROM AUPORTAL.BASE_USER BU1
			         WHERE NVL(BU1.END_DATE, TO_DATE('3000', 'YYYY')) >= TRUNC(SYSDATE)) BU,
			       AUPORTAL.BASE_HR_POSITION_ASSIGN_V PA,
			       AUPORTAL.BASE_HR_POSITION_V POSI,
			       AUPORTAL.BASE_ORGANIZATION_V OU,
			       (SELECT FV.FLEX_VALUE CHANNEL_TYPE, FV.DESCRIPTION CHANNEL_NAME
			          FROM APPS.FND_FLEX_VALUE_SETS FVS, APPS.FND_FLEX_VALUES_VL FV
			         WHERE FVS.FLEX_VALUE_SET_ID = FV.FLEX_VALUE_SET_ID
			           AND FVS.FLEX_VALUE_SET_NAME = 'CUX_CHANNEL_TYPE') CCT
			 WHERE BU.PERSON_ID = PA.PERSON_ID
			   AND PA.POSITION_ID = POSI.POSITION_ID
			   AND POSI.CHANNEL_TYPE = CCT.CHANNEL_TYPE
			   AND POSI.OU_ORGANIZATION_ID = OU.ORGANIZATION_ID
			   <if test="month != null and ''!= month">
			       <if test="start_date == null  or  ''== start_date">
			      <if test="monthStart == null || ''== monthStart || monthEnd == null || ''== monthEnd">
			      AND NVL(PA.PEOPLE_END_DATE, TO_DATE('3000', 'YYYY')) >= TRUNC(TO_DATE(#{month},'YYYY-MM'),'MM') 
				  AND PA.PEOPLE_START_DATE &lt; TRUNC(ADD_MONTHS(TO_DATE(#{month},'YYYY-MM'),1),'MM')
				  AND  NVL(PA.EFFECTIVE_END_DATE, TO_DATE('3000', 'YYYY')) >= TRUNC(TO_DATE(#{month},'YYYY-MM'),'MM')
				  AND PA.EFFECTIVE_START_DATE &lt; TRUNC(ADD_MONTHS(TO_DATE(#{month},'YYYY-MM'),1),'MM')
				  AND  NVL(POSI.EFFECTIVE_END_DATE, TO_DATE('3000', 'YYYY')) >= TRUNC(TO_DATE(#{month},'YYYY-MM'),'MM')
				  AND POSI.EFFECTIVE_START_DATE &lt; TRUNC(ADD_MONTHS(TO_DATE(#{month},'YYYY-MM'),1),'MM')
				  </if>
				  <if test="monthStart != null and ''!= monthStart and monthEnd != null and ''!= monthEnd">
			       AND NVL(PA.PEOPLE_END_DATE, TO_DATE('3000', 'YYYY')) >= TRUNC(TO_DATE(#{monthStart},'YYYY-MM'),'MM') 
				  AND PA.PEOPLE_START_DATE &lt; TRUNC(ADD_MONTHS(TO_DATE(#{monthEnd},'YYYY-MM'),1),'MM')
				  AND  NVL(PA.EFFECTIVE_END_DATE, TO_DATE('3000', 'YYYY')) >= TRUNC(TO_DATE(#{monthStart},'YYYY-MM'),'MM')
				  AND PA.EFFECTIVE_START_DATE &lt; TRUNC(ADD_MONTHS(TO_DATE(#{monthEnd},'YYYY-MM'),1),'MM')
				  AND  NVL(POSI.EFFECTIVE_END_DATE, TO_DATE('3000', 'YYYY')) >= TRUNC(TO_DATE(#{monthStart},'YYYY-MM'),'MM')
				  AND POSI.EFFECTIVE_START_DATE &lt; TRUNC(ADD_MONTHS(TO_DATE(#{monthEnd},'YYYY-MM'),1),'MM')
				  </if>
				  </if>
				    <if test="start_date != null and ''!= start_date">
			      AND NVL(PA.PEOPLE_END_DATE, TO_DATE('3000', 'YYYY')) >= trunc(to_date(#{start_date},'YYYY-MM-DD')) 
				  AND PA.PEOPLE_START_DATE &lt;= trunc(to_date(#{end_date},'YYYY-MM-DD'))
				  AND  NVL(PA.EFFECTIVE_END_DATE, TO_DATE('3000', 'YYYY')) >= trunc(to_date(#{start_date},'YYYY-MM-DD'))
				  AND PA.EFFECTIVE_START_DATE &lt;= trunc(to_date(#{end_date},'YYYY-MM-DD'))
				  AND  NVL(POSI.EFFECTIVE_END_DATE, TO_DATE('3000', 'YYYY')) >= trunc(to_date(#{start_date},'YYYY-MM-DD'))
				  AND POSI.EFFECTIVE_START_DATE &lt;= trunc(to_date(#{end_date},'YYYY-MM-DD'))
				  </if>
			   </if>
			    <if test="month == null  or  ''== month">
			     AND SYSDATE BETWEEN PA.PEOPLE_START_DATE AND
			       NVL(PA.PEOPLE_END_DATE, TO_DATE('3000', 'YYYY'))
				   AND SYSDATE BETWEEN PA.EFFECTIVE_START_DATE AND
				       NVL(PA.EFFECTIVE_END_DATE, TO_DATE('3000', 'YYYY'))
				   AND SYSDATE BETWEEN POSI.EFFECTIVE_START_DATE AND
				       NVL(POSI.EFFECTIVE_END_DATE, TO_DATE('3000', 'YYYY'))
			   </if>
			 
			
			<if test="userNameSelect != null and ''!= userNameSelect">
			   AND pa.person_NAME like '%'|| #{userNameSelect} ||'%'
			</if>
			<if test="orgId != null and ''!= orgId ">
			   AND   POSI.OU_ORGANIZATION_ID   IN
			  ( 
		            SELECT CAB.USER_ID ORG_ID_CHILD  
		              FROM APPS.CUX_CDM_ACCESS_BASEDATA CAB
		             WHERE CAB.ACCESS_TYPE = '9'
		               AND CAB.ORG_ID =#{orgId} 
		               AND CAB.CUST_ACCOUNT_ID IN (2
		                 <if test="'Y'.toString()==levelTypeUp">
			 			,1
			 		</if> 
			        <if test="'Y'.toString()==levelTypeDown">
			 			,3
			 		</if>
			         )
		 	   )
			</if>
			<if test="channelType != null and ''!= channelType and '90'!= channelType">
			  AND  POSI.CHANNEL_TYPE = #{channelType}
			</if>
			 <if test="departmentCode != null and ''!= departmentCode">
			  AND  PA.HR_ORGANIZATION_ID  = #{departmentCode}
			</if>
			<if test="userId != null and ''!= userId">
			  AND bu.USER_ID = #{userId}
			</if>
			 <if test="personId != null and ''!= personId">
			  AND pa.PERSON_ID = #{personId}
			</if>
			<if test="jobIdStr != null and ''!= jobIdStr"  >
			 AND POSI.POSITION_ID in  (select POSI.POSITION_ID from BASE_HR_POSITION_V POSI where POSI.JOB_ID=#{jobIdStr,jdbcType=NUMERIC})
			</if> 
			order by pa.PRIMARY_FLAG desc
	</select>
	<select id="getPersonOrganizationNotOrderBy" resultMap="PersonMap" parameterType="com.aus.common.model.PersonDto">
			SELECT BU.USER_ID                USER_ID,
			       BU.USER_NAME              USER_ACCOUNT,
			       PA.PERSON_ID,
			       PA.PERSON_NAME            USER_NAME,
			       PA.HR_ORGANIZATION_ID DEPARTMENT_CODE,
			       POSI.HR_ORGANIZATION_NAME DEPARTMENT_NAME,
			       POSI.CHANNEL_TYPE,
			       POSI.PROVINCE,
			       CCT.CHANNEL_NAME,
			       POSI.OU_ORGANIZATION_ID   ORG_ID,
			       OU.ORGANIZATION_NAME      ORG_NAME,
			       POSI.POSITION_ID,
			       POSI.POSITION_NAME,
			       POSI.BUDGET_PRIVILEGE,
			       PA.PRIMARY_FLAG,
			       POSI.JOB_ID,
			       to_char((SELECT PAP.SERVICE_START_DATE 
	        FROM AUPORTAL.BASE_HR_PERSON_V PAP 
	       WHERE PAP.EFFECTIVE_END_DATE > SYSDATE
	         AND PAP.PERSON_ID =  PA.PERSON_ID),'yyyy-mm-dd') service_start_dateStr 
			  FROM (SELECT *
			          FROM AUPORTAL.BASE_USER BU1
			         WHERE NVL(BU1.END_DATE, TO_DATE('3000', 'YYYY')) >= TRUNC(SYSDATE)) BU,
			       AUPORTAL.BASE_HR_POSITION_ASSIGN_V PA,
			       AUPORTAL.BASE_HR_POSITION_V POSI,
			       AUPORTAL.BASE_ORGANIZATION_V OU,
			       (SELECT FV.FLEX_VALUE CHANNEL_TYPE, FV.DESCRIPTION CHANNEL_NAME
			          FROM APPS.FND_FLEX_VALUE_SETS FVS, APPS.FND_FLEX_VALUES_VL FV
			         WHERE FVS.FLEX_VALUE_SET_ID = FV.FLEX_VALUE_SET_ID
			           AND FVS.FLEX_VALUE_SET_NAME = 'CUX_CHANNEL_TYPE') CCT
			 WHERE  
				<if test="ignoreValid != null and ''!= ignoreValid">
				   BU.PERSON_ID(+) = PA.PERSON_ID
				</if>
				<if test="ignoreValid == null or ''== ignoreValid">
				   BU.PERSON_ID = PA.PERSON_ID
				</if> 
			   AND PA.POSITION_ID = POSI.POSITION_ID
			   AND POSI.CHANNEL_TYPE = CCT.CHANNEL_TYPE
			   AND POSI.OU_ORGANIZATION_ID = OU.ORGANIZATION_ID
			   AND SYSDATE BETWEEN PA.PEOPLE_START_DATE AND
			       NVL(PA.PEOPLE_END_DATE, TO_DATE('3000', 'YYYY'))
			<if test="isInvalid == null or ''== isInvalid or isInvalid != 'Y'.toString()">
			   AND SYSDATE BETWEEN PA.EFFECTIVE_START_DATE AND
			       NVL(PA.EFFECTIVE_END_DATE, TO_DATE('3000', 'YYYY'))
			   AND SYSDATE BETWEEN POSI.EFFECTIVE_START_DATE AND
			       NVL(POSI.EFFECTIVE_END_DATE, TO_DATE('3000', 'YYYY'))
			</if>
			<if test="userNameSelect != null and ''!= userNameSelect">
			   AND pa.person_NAME like '%'|| #{userNameSelect} ||'%'
			</if>
	 
		   <if test="orgId != null and ''!= orgId" >
			 AND POSI.OU_ORGANIZATION_ID IN 
			 
			 (
				   SELECT CAB.USER_ID 
			        FROM CUX.CUX_CDM_ACCESS_BASEDATA CAB
			       WHERE CAB.ACCESS_TYPE = '9'
			         AND CAB.CUST_ACCOUNT_ID IN (2
			        <if test="'Y'.toString()==levelTypeUp">
			 			,1
			 		</if> 
			        <if test="'Y'.toString()==levelTypeDown">
			 			,3
			 		</if>
			         )
			         and CAB.ORG_ID =  #{orgId}
			 )
			 	
		  <if test="nowUserType != null and ''!= nowUserType">
						<if test="nowUserid != null and ''!= nowUserid">
							<if test="'20'==nowUserType">
								AND PA.PERSON_ID in (SELECT CAB.SUBORDINATE_PERSON_ID
								FROM APPS.CUX_CDM_ACCESS_BASEDATA CAB
								WHERE CAB.ACCESS_TYPE = '1'
								AND CAB.ORG_ID = #{orgId}
								AND CAB.OA_USER_ID = #{nowUserid})
								
								AND PA.HR_ORGANIZATION_ID in(
								SELECT V.HR_ORGANIZATION_ID FROM BASE_HR_POSITION_ASSIGN_V V,BASE_USER FU
								where v.PERSON_ID=fu.person_id and fu.user_id=#{nowUserid}
								)
							 
							</if> 
						</if>
			</if>
			</if>
			

			
			<if test="channelType != null and ''!= channelType and '90'!= channelType">
			  AND  POSI.CHANNEL_TYPE = #{channelType}
			</if>
			 <if test="departmentCode != null and ''!= departmentCode">
			  AND  PA.HR_ORGANIZATION_ID  = #{departmentCode}
			</if>
			<if test="userId != null and ''!= userId">
			  AND bu.USER_ID = #{userId}
			</if>
			 <if test="personId != null and ''!= personId">
			  AND pa.PERSON_ID = #{personId}
			</if>
			<if test="primaryFlag != null and ''!= primaryFlag">
			  AND PA.PRIMARY_FLAG = #{primaryFlag}
			</if>
			<if test="jobIdStr != null and ''!= jobIdStr"  >
			 AND POSI.POSITION_ID in  (select POSI.POSITION_ID from BASE_HR_POSITION_V POSI where POSI.JOB_ID=#{jobIdStr,jdbcType=NUMERIC})
			</if> 
			 
	</select>
	
	<select id="getCommitPersonOrganizationNotOrderBy" resultMap="PersonMap" parameterType="com.aus.common.model.PersonDto">
			SELECT BU.USER_ID                USER_ID,
			       BU.USER_NAME              USER_ACCOUNT,
			       PA.PERSON_ID,
			       PA.PERSON_NAME            USER_NAME,
			       PA.HR_ORGANIZATION_ID DEPARTMENT_CODE,
			       POSI.HR_ORGANIZATION_NAME DEPARTMENT_NAME,
			       POSI.CHANNEL_TYPE,
			       POSI.PROVINCE,
			       CCT.CHANNEL_NAME,
			       POSI.OU_ORGANIZATION_ID   ORG_ID,
			       OU.ORGANIZATION_NAME      ORG_NAME,
			       POSI.POSITION_ID,
			       POSI.POSITION_NAME,
			       POSI.BUDGET_PRIVILEGE,
			       PA.PRIMARY_FLAG,
			       POSI.JOB_ID,
			       to_char((SELECT PAP.SERVICE_START_DATE 
	        FROM AUPORTAL.BASE_HR_PERSON_V PAP 
	       WHERE PAP.EFFECTIVE_END_DATE > SYSDATE
	         AND PAP.PERSON_ID =  PA.PERSON_ID),'yyyy-mm-dd') service_start_dateStr 
			  FROM (SELECT *
			          FROM AUPORTAL.BASE_USER BU1
			         WHERE NVL(BU1.END_DATE, TO_DATE('3000', 'YYYY')) >= TRUNC(SYSDATE)) BU,
			       AUPORTAL.BASE_HR_POSITION_ASSIGN_V PA,
			       AUPORTAL.BASE_HR_POSITION_V POSI,
			       AUPORTAL.BASE_ORGANIZATION_V OU,
			       APPS.WF_ROLES R,
			       (SELECT FV.FLEX_VALUE CHANNEL_TYPE, FV.DESCRIPTION CHANNEL_NAME
			          FROM APPS.FND_FLEX_VALUE_SETS FVS, APPS.FND_FLEX_VALUES_VL FV
			         WHERE FVS.FLEX_VALUE_SET_ID = FV.FLEX_VALUE_SET_ID
			           AND FVS.FLEX_VALUE_SET_NAME = 'CUX_CHANNEL_TYPE') CCT
			 WHERE  
				<if test="ignoreValid != null and ''!= ignoreValid">
				   BU.PERSON_ID(+) = PA.PERSON_ID
				</if>
				<if test="ignoreValid == null or ''== ignoreValid">
				   BU.PERSON_ID = PA.PERSON_ID
				</if> 
			   AND BU.USER_NAME = R.NAME
			   AND PA.POSITION_ID = POSI.POSITION_ID
			   AND POSI.CHANNEL_TYPE = CCT.CHANNEL_TYPE
			   AND POSI.OU_ORGANIZATION_ID = OU.ORGANIZATION_ID
			   AND SYSDATE BETWEEN PA.PEOPLE_START_DATE AND
			       NVL(PA.PEOPLE_END_DATE, TO_DATE('3000', 'YYYY'))
			<if test="isInvalid == null or ''== isInvalid or isInvalid != 'Y'.toString()">
			   AND SYSDATE BETWEEN PA.EFFECTIVE_START_DATE AND
			       NVL(PA.EFFECTIVE_END_DATE, TO_DATE('3000', 'YYYY'))
			   AND SYSDATE BETWEEN POSI.EFFECTIVE_START_DATE AND
			       NVL(POSI.EFFECTIVE_END_DATE, TO_DATE('3000', 'YYYY'))
			</if>
			<if test="userNameSelect != null and ''!= userNameSelect">
			   AND pa.person_NAME like '%'|| #{userNameSelect} ||'%'
			</if>
	 
		   <if test="orgId != null and ''!= orgId" >
			 AND POSI.OU_ORGANIZATION_ID IN 
			 
			 (
				   SELECT CAB.USER_ID 
			        FROM CUX.CUX_CDM_ACCESS_BASEDATA CAB
			       WHERE CAB.ACCESS_TYPE = '9'
			         AND CAB.CUST_ACCOUNT_ID IN (2
			        <if test="'Y'.toString()==levelTypeUp">
			 			,1
			 		</if> 
			        <if test="'Y'.toString()==levelTypeDown">
			 			,3
			 		</if>
			         )
			         and CAB.ORG_ID =  #{orgId}
			 )
			 	
			 	
			</if>
			
			<if test="channelType != null and ''!= channelType and '90'!= channelType">
			  AND  POSI.CHANNEL_TYPE = #{channelType}
			</if>
			 <if test="departmentCode != null and ''!= departmentCode">
			  AND  PA.HR_ORGANIZATION_ID  = #{departmentCode}
			</if>
			<if test="userId != null and ''!= userId">
			  AND bu.USER_ID = #{userId}
			</if>
			 <if test="personId != null and ''!= personId">
			  AND pa.PERSON_ID = #{personId}
			</if>
			<if test="primaryFlag != null and ''!= primaryFlag">
			  AND PA.PRIMARY_FLAG = #{primaryFlag}
			</if>
			<if test="jobIdStr != null and ''!= jobIdStr"  >
			 AND POSI.POSITION_ID in  (select POSI.POSITION_ID from BASE_HR_POSITION_V POSI where POSI.JOB_ID=#{jobIdStr,jdbcType=NUMERIC})
			</if> 
			 
	</select>
	
	
		<select id="getPersonOrganizationIsShoppingGuideNotOrderBy" resultMap="PersonMap" parameterType="com.aus.common.model.PersonDto">
			SELECT BU.USER_ID                USER_ID,
			       BU.USER_NAME              USER_ACCOUNT,
			       PA.PERSON_ID,
			       PA.PERSON_NAME            USER_NAME,
			       PA.HR_ORGANIZATION_ID DEPARTMENT_CODE,
			       POSI.HR_ORGANIZATION_NAME DEPARTMENT_NAME,
			       POSI.CHANNEL_TYPE,
			       POSI.PROVINCE,
			       CCT.CHANNEL_NAME,
			       POSI.OU_ORGANIZATION_ID   ORG_ID,
			       OU.ORGANIZATION_NAME      ORG_NAME,
			       POSI.POSITION_ID,
			       POSI.POSITION_NAME,
			       POSI.BUDGET_PRIVILEGE,
			       PA.PRIMARY_FLAG,
			       POSI.JOB_ID,
			       to_char((SELECT PAP.SERVICE_START_DATE 
	        FROM AUPORTAL.BASE_HR_PERSON_V PAP 
	       WHERE PAP.EFFECTIVE_END_DATE > SYSDATE
	         AND PAP.PERSON_ID =  PA.PERSON_ID),'yyyy-mm-dd') service_start_dateStr 
			  FROM (SELECT *
			          FROM AUPORTAL.BASE_USER BU1
			         WHERE NVL(BU1.END_DATE, TO_DATE('3000', 'YYYY')) >= TRUNC(SYSDATE)) BU,
			       AUPORTAL.BASE_HR_POSITION_ASSIGN_V PA,
			       AUPORTAL.BASE_HR_POSITION_V POSI,
			       AUPORTAL.BASE_ORGANIZATION_V OU,
			       (SELECT FV.FLEX_VALUE CHANNEL_TYPE, FV.DESCRIPTION CHANNEL_NAME
			          FROM APPS.FND_FLEX_VALUE_SETS FVS, APPS.FND_FLEX_VALUES_VL FV
			         WHERE FVS.FLEX_VALUE_SET_ID = FV.FLEX_VALUE_SET_ID
			           AND FVS.FLEX_VALUE_SET_NAME = 'CUX_CHANNEL_TYPE') CCT
			 WHERE  
				<if test="ignoreValid != null and ''!= ignoreValid">
				   BU.PERSON_ID(+) = PA.PERSON_ID
				</if>
				<if test="ignoreValid == null or ''== ignoreValid">
				   BU.PERSON_ID = PA.PERSON_ID
				</if> 
			   AND PA.POSITION_ID = POSI.POSITION_ID
			   AND POSI.CHANNEL_TYPE = CCT.CHANNEL_TYPE
			   AND POSI.OU_ORGANIZATION_ID = OU.ORGANIZATION_ID
			   AND SYSDATE BETWEEN PA.PEOPLE_START_DATE AND
			       NVL(PA.PEOPLE_END_DATE, TO_DATE('3000', 'YYYY'))
			   AND SYSDATE BETWEEN PA.EFFECTIVE_START_DATE AND
			       NVL(PA.EFFECTIVE_END_DATE, TO_DATE('3000', 'YYYY'))
			   AND SYSDATE BETWEEN POSI.EFFECTIVE_START_DATE AND
			       NVL(POSI.EFFECTIVE_END_DATE, TO_DATE('3000', 'YYYY'))
			
			<if test="userNameSelect != null and ''!= userNameSelect">
			   AND pa.person_NAME like '%'|| #{userNameSelect} ||'%'
			</if>
			<if test="orgId != null and ''!= orgId">
			   AND   POSI.OU_ORGANIZATION_ID   IN 
			  ( 
		            SELECT CAB.USER_ID ORG_ID_CHILD  
		              FROM APPS.CUX_CDM_ACCESS_BASEDATA CAB
		             WHERE CAB.ACCESS_TYPE = '9'
		               AND CAB.ORG_ID =#{orgId} 
		               AND CAB.CUST_ACCOUNT_ID IN (2, 3)
		 	   )
			</if>
			<if test="channelType != null and ''!= channelType and '90'!= channelType">
			  AND  POSI.CHANNEL_TYPE = #{channelType}
			</if>
			 <if test="departmentCode != null and ''!= departmentCode">
			  AND  PA.HR_ORGANIZATION_ID  = #{departmentCode}
			</if>
			<if test="userId != null and ''!= userId">
			  AND bu.USER_ID = #{userId}
			</if>
			 <if test="personId != null and ''!= personId">
			  AND pa.PERSON_ID = #{personId}
			</if>
			<if test="primaryFlag != null and ''!= primaryFlag">
			  AND PA.PRIMARY_FLAG = #{primaryFlag}
			</if>
			<if test="jobIdStr != null and ''!= jobIdStr"  >
			 AND POSI.POSITION_ID in  (select POSI.POSITION_ID from BASE_HR_POSITION_V POSI where POSI.JOB_ID=#{jobIdStr,jdbcType=NUMERIC})
		     </if>
		 
			union
			select
		
			null USER_ID,
			null USER_ACCOUNT,
			p.person_id PERSON_ID,
			p.last_name USER_NAME,
			null DEPARTMENT_CODE,
			null DEPARTMENT_NAME,
			null CHANNEL_TYPE,
			null PROVINCE,
			null CHANNEL_NAME,
			p.attribute6 ORG_ID,
			ou.ORGANIZATION_NAME ORG_NAME,
			null POSITION_ID,
			null POSITION_NAME,
			null BUDGET_PRIVILEGE,
			null PRIMARY_FLAG,
			null JOB_ID,
			null service_start_dateStr
		
			from per_person_types_v pt,
			apps.per_all_people_f p,
			apps.per_person_type_usages_f ptu,
			 AUPORTAL.BASE_ORGANIZATION_V OU 
			where pt.person_type_id = ptu.person_type_id
			and p.person_id = ptu.person_id
			and pt.active_flag = 'Y'
			and p.person_type_id = 6
			and trunc(sysdate) between p.effective_start_date and
			p.effective_end_date
			and trunc(sysdate) between ptu.effective_start_date and
			ptu.effective_end_date
			and pt.user_person_type = '导购'
			and ou.ORGANIZATION_ID= p.attribute6
		     <if test="orgId != null and ''!= orgId">
			  and p.attribute6 IN 
			  ( 
		            SELECT CAB.USER_ID ORG_ID_CHILD  
		              FROM APPS.CUX_CDM_ACCESS_BASEDATA CAB
		             WHERE CAB.ACCESS_TYPE = '9'
		               AND CAB.ORG_ID =#{orgId} 
		               AND CAB.CUST_ACCOUNT_ID IN (2, 3)
		 	   )
			</if>
			<if test="userNameSelect != null and ''!= userNameSelect">
				AND p.last_name like '%'|| #{userNameSelect} ||'%'
			</if>
	</select>
    <!--总部不包括所有的 -->
	<select id="getPersonOrganizationNoCall" resultMap="PersonMap" parameterType="com.aus.common.model.PersonDto">
			SELECT BU.USER_ID                USER_ID,
             BU.USER_NAME              USER_ACCOUNT,
             PA.PERSON_ID,
             PA.PERSON_NAME            USER_NAME,
             PA.HR_ORGANIZATION_ID DEPARTMENT_CODE,
             POSI.HR_ORGANIZATION_NAME DEPARTMENT_NAME,
             POSI.PROVINCE,
             POSI.CHANNEL_TYPE,
             CCT.CHANNEL_NAME,
             POSI.OU_ORGANIZATION_ID   ORG_ID,
             OU.ORGANIZATION_NAME      ORG_NAME,
             POSI.POSITION_ID,
             POSI.POSITION_NAME,
             POSI.BUDGET_PRIVILEGE,
             PA.PRIMARY_FLAG,
             POSI.JOB_ID,
             to_char(P.Service_Start_Date,'yyyy-mm-dd') service_start_dateStr ,
             (select bh.hight_edu from base.BASE_HR_PERSON_INFO bh where bh.person_id = PA.PERSON_ID) hight_edu,
             
             (select bh.try_salary_level from base.BASE_HR_PERSON_INFO bh where bh.person_id = PA.PERSON_ID) try_salary_level,
             
             (trunc(months_between(sysdate,P.DATE_OF_BIRTH)/12)) age,
              P.SEX sex,
              P.MOBILE_PHONE,
              P.EMAIL_ADDRESS,
              (select bh.HOME_ADRESS from base.BASE_HR_PERSON_INFO bh where bh.person_id = PA.PERSON_ID) home_adress,
              
              (select 
       PP.Attribute3  
  from HR.PER_ALL_PEOPLE_F PP
 where PP.Person_Id = PA.PERSON_ID 
   and Pp.EFFECTIVE_END_DATE > sysdate) id_card_num,
              
             (SELECT FLV.MEANING FROM APPS.FND_LOOKUP_VALUES_VL FLV WHERE FLV.VIEW_APPLICATION_ID = 3 AND FLV.LOOKUP_TYPE = 'SEX' AND  FLV.LOOKUP_CODE = P.SEX) sexName 
             
        FROM (SELECT *
                FROM AUPORTAL.BASE_USER BU1
               WHERE NVL(BU1.END_DATE, TO_DATE('3000', 'YYYY')) >= TRUNC(SYSDATE)) BU,
             AUPORTAL.BASE_HR_POSITION_ASSIGN_V PA,
             AUPORTAL.BASE_HR_POSITION_V POSI,
             AUPORTAL.BASE_ORGANIZATION_V OU,
             (SELECT FV.FLEX_VALUE CHANNEL_TYPE, FV.DESCRIPTION CHANNEL_NAME
                FROM APPS.FND_FLEX_VALUE_SETS FVS, APPS.FND_FLEX_VALUES_VL FV
               WHERE FVS.FLEX_VALUE_SET_ID = FV.FLEX_VALUE_SET_ID
                 AND FVS.FLEX_VALUE_SET_NAME = 'CUX_CHANNEL_TYPE') CCT,
                 (SELECT PAP.DATE_OF_BIRTH,
                 PAP.sex,
                 PAP.SERVICE_START_DATE,
                 PAP.PERSON_ID,
                 PAP.MOBILE_PHONE,
                 PAP.EMAIL_ADDRESS
                    FROM AUPORTAL.BASE_HR_PERSON_V PAP 
                 WHERE PAP.EFFECTIVE_END_DATE  >  SYSDATE) P
       WHERE BU.PERSON_ID = PA.PERSON_ID
         AND PA.PERSON_ID = P.Person_Id(+)  
         AND PA.POSITION_ID = POSI.POSITION_ID
         AND POSI.CHANNEL_TYPE = CCT.CHANNEL_TYPE
         AND POSI.OU_ORGANIZATION_ID = OU.ORGANIZATION_ID
         AND SYSDATE BETWEEN PA.PEOPLE_START_DATE AND
             NVL(PA.PEOPLE_END_DATE, TO_DATE('3000', 'YYYY'))
         AND SYSDATE BETWEEN PA.EFFECTIVE_START_DATE AND
             NVL(PA.EFFECTIVE_END_DATE, TO_DATE('3000', 'YYYY'))
         AND SYSDATE BETWEEN POSI.EFFECTIVE_START_DATE AND
             NVL(POSI.EFFECTIVE_END_DATE, TO_DATE('3000', 'YYYY'))
			
			<if test="userNameSelect != null and ''!= userNameSelect">
			   AND pa.person_NAME like '%'|| #{userNameSelect} ||'%'
			</if>
			<if test="orgId != null and ''!= orgId">
			   AND   POSI.OU_ORGANIZATION_ID   = #{orgId}
			</if>
			<if test="channelType != null and ''!= channelType and '90'!= channelType">
			  AND  POSI.CHANNEL_TYPE = #{channelType}
			</if>
			 <if test="departmentCode != null and ''!= departmentCode">
			  AND  PA.HR_ORGANIZATION_ID  = #{departmentCode}
			</if>
			<if test="userId != null and ''!= userId">
			  AND bu.USER_ID = #{userId}
			</if>
			 <if test="personId != null and ''!= personId">
			  AND pa.PERSON_ID = #{personId}
			</if>
			order by pa.PRIMARY_FLAG desc
	</select>
	
	
	<select id="getPersonInBudget" resultMap="PersonMap" parameterType="com.aus.common.model.PersonDto">
		SELECT FU.USER_ID         USER_ID,
		       FU.USER_NAME       USER_ACCOUNT,
		       F.LAST_NAME        USER_NAME,
		       V.PROVINCE         DEPARTMENT_CODE,
		       V.ORG_ID,
		       V.CHANNEL_TYPE,
		       CCT.CHANNEL_NAME,
		       F.PERSON_ID,
		       B.ORG_NAME_CHILD   ORG_NAME,
		       V.POSITION_ID,
		       V.POSITION_NAME,
		       V.BUDGET_PRIVILEGE,
		       V.PRIMARY_FLAG
		  FROM BASE_USER FU,
		       APPS.PER_ALL_PEOPLE_F F,
		        <if test="isInvalid == null or isInvalid != 'N'.toString()">
		       APPS.CUX_PERSON_ORGANIZATION_V V,
		       </if>
		       <if test="isInvalid == 'N'.toString()">
		         APPS.CUX_PERSON_ORGANIZATION_V3 V,  
		       </if>		       
		       (SELECT CAB.ORG_ID                   ORG_ID,
		               CAB.USER_ID                  ORG_ID_CHILD,
		               CAB.SECONDARY_INVENTORY_NAME ORG_NAME_CHILD
		          FROM APPS.CUX_CDM_ACCESS_BASEDATA CAB
		         WHERE CAB.ACCESS_TYPE = '9'
		           
			     <if test="orgId != null and ''!= orgId ">
				 	  AND CAB.ORG_ID = #{orgId}
			 	 </if>
		           AND CAB.CUST_ACCOUNT_ID IN (2, 3)) B,
		       (SELECT FV.FLEX_VALUE CHANNEL_TYPE, FV.DESCRIPTION CHANNEL_NAME
		          FROM APPS.FND_FLEX_VALUE_SETS FVS, APPS.FND_FLEX_VALUES_VL FV
		         WHERE FVS.FLEX_VALUE_SET_ID = FV.FLEX_VALUE_SET_ID
		           AND FVS.FLEX_VALUE_SET_NAME = 'CUX_CHANNEL_TYPE') CCT
		 WHERE FU.PERSON_ID(+) = F.PERSON_ID
		  <if test="isInvalid == null or isInvalid != 'Y'.toString()">
		   	AND F.EFFECTIVE_START_DATE &lt;= SYSDATE
		    AND F.EFFECTIVE_END_DATE &gt;= SYSDATE
		  </if>
		   AND F.PERSON_ID = V.PERSON_ID
		   AND V.ORG_ID = B.ORG_ID_CHILD
		   AND V.CHANNEL_TYPE = CCT.CHANNEL_TYPE
		   
		 <if test="userNameSelect != null and ''!= userNameSelect">
		 	  AND F.LAST_NAME like '%'|| #{userNameSelect} ||'%'
	 	 </if>
	 	 
	 	 <if test="channelType != null and ''!= channelType and '90'!= channelType">
		    AND V.CHANNEL_TYPE = #{channelType}
	 	 </if>
	 	  <if test="departmentCode != null and ''!= departmentCode">
		    AND V.PROVINCE = #{departmentCode}
	 	 </if>
	 	 <if test="userId != null and ''!= userId">
		    AND FU.USER_ID = #{userId}
	 	 </if>
	 	  <if test="personId != null and ''!= personId">
		    AND F.PERSON_ID = #{personId}
	 	 </if>
	 	  <if test="conditionSql != null and ''!= conditionSql">
		    ${conditionSql}
	 	 </if>
	 	 ORDER BY V.PRIMARY_FLAG DESC
	</select>
	<select id="getPerson" resultMap="PersonMap" parameterType="com.aus.common.model.PersonDto">
		SELECT FU.USER_ID         USER_ID,
		       FU.USER_NAME       USER_ACCOUNT,
		       F.LAST_NAME        USER_NAME,
		       V.PROVINCE         DEPARTMENT_CODE,
		       V.ORG_ID,
		       V.CHANNEL_TYPE,
		       CCT.CHANNEL_NAME,
		       F.PERSON_ID,
		       B.ORG_NAME_CHILD   ORG_NAME,
		       V.POSITION_ID,
		       V.POSITION_NAME,
		       V.BUDGET_PRIVILEGE,
		       (SELECT A.HR_ORGANIZATION_ID FROM  AUPORTAL.BASE_HR_POSITION_V A  WHERE A.POSITION_ID =  V.POSITION_ID) AS HR_ORGANIZATION_ID,
		       (SELECT A.HR_ORGANIZATION_NAME FROM  AUPORTAL.BASE_HR_POSITION_V A WHERE A.POSITION_ID =  V.POSITION_ID) AS hrOrganizationName
		  FROM BASE_USER FU,
		       APPS.PER_ALL_PEOPLE_F F,
		        <if test="isInvalid == null or isInvalid != 'N'.toString()">
		       APPS.CUX_PERSON_ORGANIZATION_V V,
		       </if>
		       <if test="isInvalid == 'N'.toString()">
		         APPS.CUX_PERSON_ORGANIZATION_V3 V,  
		       </if>		       
		       (SELECT CAB.ORG_ID                   ORG_ID,
		               CAB.USER_ID                  ORG_ID_CHILD,
		               CAB.SECONDARY_INVENTORY_NAME ORG_NAME_CHILD
		          FROM APPS.CUX_CDM_ACCESS_BASEDATA CAB
		         WHERE CAB.ACCESS_TYPE = '9'
		           
			     <if test="orgId != null and ''!= orgId ">
				 	  AND CAB.ORG_ID = #{orgId}
			 	 </if>
		           AND CAB.CUST_ACCOUNT_ID IN (2, 3)) B,
		       (SELECT FV.FLEX_VALUE CHANNEL_TYPE, FV.DESCRIPTION CHANNEL_NAME
		          FROM APPS.FND_FLEX_VALUE_SETS FVS, APPS.FND_FLEX_VALUES_VL FV
		         WHERE FVS.FLEX_VALUE_SET_ID = FV.FLEX_VALUE_SET_ID
		           AND FVS.FLEX_VALUE_SET_NAME = 'CUX_CHANNEL_TYPE') CCT
		 WHERE FU.PERSON_ID(+) = F.PERSON_ID
		  <if test="isInvalid == null or isInvalid != 'Y'.toString()">
		   	AND F.EFFECTIVE_START_DATE &lt;= SYSDATE
		    AND F.EFFECTIVE_END_DATE &gt;= SYSDATE
		  </if>
		   AND F.PERSON_ID = V.PERSON_ID
		   AND V.ORG_ID = B.ORG_ID_CHILD
		   AND V.CHANNEL_TYPE = CCT.CHANNEL_TYPE
		   
		 <if test="userNameSelect != null and ''!= userNameSelect">
		 	  AND F.LAST_NAME like '%'|| #{userNameSelect} ||'%'
	 	 </if>
	 	 
	 	 <if test="channelType != null and ''!= channelType and '90'!= channelType">
		    AND V.CHANNEL_TYPE = #{channelType}
	 	 </if>
	 	  <if test="departmentCode != null and ''!= departmentCode">
		    AND V.PROVINCE = #{departmentCode}
	 	 </if>
	 	 <if test="userId != null and ''!= userId">
		    AND FU.USER_ID = #{userId}
	 	 </if>
	 	  <if test="personId != null and ''!= personId">
		    AND F.PERSON_ID = #{personId}
	 	 </if>
	 	  <if test="conditionSql != null and ''!= conditionSql">
		    ${conditionSql}
	 	 </if>
	 	 ORDER BY V.PROVINCE
	</select>
	
	
	<select id="getPersonJobId" resultType="java.lang.String" parameterType="java.lang.String">
			select t.JOB_ID
		  from base_hr_position_assign_v t
		 where t.EFFECTIVE_START_DATE &lt; sysdate
		   and t.EFFECTIVE_END_DATE > sysdate
		   and t.PERSON_ID = #{personId}
		   
		 <if test="hrOrgId != null and ''!= hrOrgId">
		    and t.HR_ORGANIZATION_ID= #{hrOrgId}
	 	 </if>
		   and rownum = 1
	</select>
	
 	<select id="getPersonBasicInformation" resultType="com.aus.common.model.PersonBasicInformation" parameterType="java.lang.String">
		  SELECT PAP.EMAIL_ADDRESS,pap.sex,pap.MOBILE_PHONE
	        FROM AUPORTAL.BASE_HR_PERSON_V PAP 
	       WHERE PAP.EFFECTIVE_END_DATE > SYSDATE
	         AND PAP.PERSON_ID =  #{personId}
	</select>
	
	<select id="getPersonIdByPersonName" resultType="com.aus.common.model.PersonDto" parameterType="java.lang.String">
	      SELECT DISTINCT F.LAST_NAME        userName,
		       F.PERSON_ID as personId
		  FROM CUX.CUX_CDM_ACCESS_BASEDATA CAB,
		  	   APPS.PER_ALL_PEOPLE_F F,
		       BASE.BASE_USER              BU
		 WHERE CAB.ACCESS_TYPE = '1' 
		   AND CAB.OA_USER_ID = BU.USER_ID
		   AND CAB.SUBORDINATE_PERSON_ID(+) = F.PERSON_ID
		   <![CDATA[
		   	AND F.EFFECTIVE_START_DATE <= SYSDATE
		   ]]>
		   AND F.EFFECTIVE_END_DATE >= SYSDATE
		   <if test="personName != null and ''!= personName">
		    AND F.LAST_NAME = #{personName}
	 	   </if>
	 	   <if test="orgId != null and ''!= orgId">
		    AND CAB.ORG_ID = #{orgId}
	 	   </if>
	</select>
	
	<select id="getPersonByPersonId" resultMap="PersonMap" parameterType="java.lang.String">
		SELECT DISTINCT F.LAST_NAME USER_NAME,
                F.PERSON_ID
  FROM CUX.CUX_CDM_ACCESS_BASEDATA CAB,
       (SELECT PAP.PERSON_ID,
               PAP.EFFECTIVE_START_DATE,
               PAP.EFFECTIVE_END_DATE,
               PAP.LAST_NAME, 
               POSI.POSITION_ID,
               POSI.NAME        POSITION_NAME,
               PD.SEGMENT5      CHANNEL_TYPE
          FROM APPS.PER_ALL_PEOPLE_F PAP
          LEFT JOIN APPS.PER_ALL_ASSIGNMENTS_F PAF
            ON PAP.PERSON_ID = PAF.PERSON_ID
           AND SYSDATE >= PAF.EFFECTIVE_START_DATE
            <![CDATA[ AND SYSDATE < PAF.EFFECTIVE_END_DATE + 1]]>
         INNER JOIN APPS.PER_ALL_POSITIONS POSI
            ON PAF.POSITION_ID = POSI.POSITION_ID
           AND SYSDATE >= POSI.DATE_EFFECTIVE
            <![CDATA[ AND SYSDATE < NVL(POSI.DATE_END, TO_DATE('3000', 'YYYY')) + 1]]>
         INNER JOIN PER_POSITION_DEFINITIONS PD
            ON POSI.POSITION_DEFINITION_ID = PD.POSITION_DEFINITION_ID
         WHERE SYSDATE >= PAP.EFFECTIVE_START_DATE
            <![CDATA[AND SYSDATE < PAP.EFFECTIVE_END_DATE + 1]]>
        ) F,
       BASE.BASE_USER BU
 WHERE CAB.ACCESS_TYPE = '1'
   AND CAB.OA_USER_ID = BU.USER_ID
   AND CAB.SUBORDINATE_PERSON_ID = F.PERSON_ID
   AND EXISTS
 (SELECT OU.ORGANIZATION_ID ORG_ID,
               PPSV.POSITION_STRUCTURE_ID,
               PPSV.POS_STRUCTURE_VERSION_ID,
               PPSE.PARENT_POSITION_ID,
               PPSE.SUBORDINATE_POSITION_ID
          FROM PER_POS_STRUCTURE_VERSIONS PPSV,
               PER_POS_STRUCTURE_ELEMENTS PPSE,
               (SELECT O.BUSINESS_GROUP_ID,
                       O.ORGANIZATION_ID,
                       O.DATE_FROM,
                       O.DATE_TO,
                       O.ATTRIBUTE1
                  FROM APPS.HR_ALL_ORGANIZATION_UNITS   O,
                       APPS.HR_ORGANIZATION_INFORMATION O2
                 WHERE O.ORGANIZATION_ID = O2.ORGANIZATION_ID
                   AND O2.ORG_INFORMATION_CONTEXT || '' = 'CLASS'
                   AND O2.ORG_INFORMATION1 = 'OPERATING_UNIT'
                   AND O2.ORG_INFORMATION2 = 'Y'
                   AND SYSDATE BETWEEN NVL(O.DATE_FROM, TO_DATE('1900', 'YYYY')) AND
                       NVL(O.DATE_TO, TO_DATE('3000', 'YYYY'))) OU
         WHERE SYSDATE BETWEEN NVL(PPSV.DATE_FROM, TO_DATE('1900', 'YYYY')) AND
               NVL(PPSV.DATE_TO, TO_DATE('3000', 'YYYY'))
           AND PPSE.POS_STRUCTURE_VERSION_ID = PPSV.POS_STRUCTURE_VERSION_ID
           AND '' || PPSV.POSITION_STRUCTURE_ID = OU.ATTRIBUTE1
           AND OU.ORGANIZATION_ID = CAB.ORG_ID
           AND (F.POSITION_ID = PPSE.PARENT_POSITION_ID OR
               F.POSITION_ID = PPSE.SUBORDINATE_POSITION_ID)
        
        )
		   <if test="personId != null and ''!= personId">
		    AND BU.PERSON_ID = #{personId}
	 	   </if>
	 	   <if test="orgId != null and ''!= orgId">
		    AND CAB.ORG_ID = #{orgId}
	 	   </if>
	 	   <if test="channelType != null and ''!= channelType">
		    AND F.CHANNEL_TYPE = #{channelType}
	 	   </if>
	 	   <if test="departmentCode != null and ''!= departmentCode">
	    		AND EXISTS (
	    		 SELECT 'X' FROM APPS.CUX_PERSON_ORGANIZATION_V VC
	    	      WHERE VC.PROVINCE = #{departmentCode}
	    	        AND F.PERSON_ID = VC.PERSON_ID
	    	   )		    	
	 	   </if>  
	</select>
	<select id="getPersonFunctionList" resultMap="PersonMap" parameterType="com.aus.common.model.PersonDto">
	
   SELECT * FROM (SELECT distinct f.last_name as userName,ou.OU_ORGANIZATION_NAME as orgName,f.person_id,hr.HR_ORGANIZATION_NAME as hrOrganizationName,hr.HR_ORGANIZATION_ID
       FROM BASE_USER FU,
       APPS.PER_ALL_PEOPLE_F F,
       auportal.base_hr_position_assign_v  V,
       auportal.base_organization_ou_v ou,
       auportal.base_organization_hr_v hr, 
       (SELECT CAB.ORG_ID                   ORG_ID,
               CAB.USER_ID                  ORG_ID_CHILD,
               CAB.SECONDARY_INVENTORY_NAME ORG_NAME_CHILD
          FROM APPS.CUX_CDM_ACCESS_BASEDATA CAB
         WHERE CAB.ACCESS_TYPE = '9'
           AND CAB.ORG_ID = #{orgId}
         AND CAB.CUST_ACCOUNT_ID IN (2, 3)) B
        WHERE FU.PERSON_ID(+) = F.PERSON_ID
   <![CDATA[ AND F.EFFECTIVE_START_DATE <= SYSDATE]]>
       AND F.EFFECTIVE_END_DATE >= SYSDATE
       AND F.PERSON_ID = V.PERSON_ID
       AND ou.OU_ORGANIZATION_ID =hr.OU_ORGANIZATION_ID
       AND V.HR_ORGANIZATION_ID = hr.HR_ORGANIZATION_ID
       AND hr.OU_ORGANIZATION_ID =b.org_id_child
		 <if test="userNameSelect != null and ''!= userNameSelect">
		 	  AND F.LAST_NAME like '%'|| #{userNameSelect} ||'%'
	 	 </if>
	 	  <if test="hr_organization_id != null and ''!= hr_organization_id">
		    AND hr.HR_ORGANIZATION_ID = #{hr_organization_id}
	 	 </if>
	 	  <if test="personId != null and ''!= personId">
		    AND F.PERSON_ID = #{personId}
	 	 </if>
	 	  <if test="conditionSql != null and ''!= conditionSql">
		    ${conditionSql}
	 	 </if>) AA
	 	 ORDER BY AA.HR_ORGANIZATION_ID
	</select>
	

	<select id="getPersonOrganizationWeiXin" resultMap="PersonMap" parameterType="com.aus.common.model.PersonDto">
			  SELECT BU.USER_ID                USER_ID,
             BU.USER_NAME              USER_ACCOUNT,
             PA.PERSON_ID,
             PA.PERSON_NAME            USER_NAME,
             PA.HR_ORGANIZATION_ID DEPARTMENT_CODE,
             POSI.HR_ORGANIZATION_NAME DEPARTMENT_NAME,
             POSI.CHANNEL_TYPE,
             CCT.CHANNEL_NAME,
             POSI.OU_ORGANIZATION_ID   ORG_ID,
             OU.ORGANIZATION_NAME      ORG_NAME,
             POSI.POSITION_ID,
             POSI.POSITION_NAME,
             POSI.BUDGET_PRIVILEGE,
             PA.PRIMARY_FLAG,
             POSI.JOB_ID,PAP.EMAIL_ADDRESS,pap.sex,pap.MOBILE_PHONE
        FROM (SELECT *
                FROM AUPORTAL.BASE_USER BU1
               WHERE NVL(BU1.END_DATE, TO_DATE('3000', 'YYYY')) >= TRUNC(SYSDATE)) BU,
             AUPORTAL.BASE_HR_POSITION_ASSIGN_V PA,
             AUPORTAL.BASE_HR_POSITION_V POSI,
             AUPORTAL.BASE_ORGANIZATION_V OU,
             (SELECT FV.FLEX_VALUE CHANNEL_TYPE, FV.DESCRIPTION CHANNEL_NAME
                FROM APPS.FND_FLEX_VALUE_SETS FVS, APPS.FND_FLEX_VALUES_VL FV
               WHERE FVS.FLEX_VALUE_SET_ID = FV.FLEX_VALUE_SET_ID
                 AND FVS.FLEX_VALUE_SET_NAME = 'CUX_CHANNEL_TYPE') CCT,
                 AUPORTAL.BASE_HR_PERSON_V PAP
       WHERE BU.PERSON_ID = PA.PERSON_ID
         AND PA.POSITION_ID = POSI.POSITION_ID
         AND POSI.CHANNEL_TYPE = CCT.CHANNEL_TYPE
         AND POSI.OU_ORGANIZATION_ID = OU.ORGANIZATION_ID
         AND SYSDATE BETWEEN PA.PEOPLE_START_DATE AND
             NVL(PA.PEOPLE_END_DATE, TO_DATE('3000', 'YYYY'))
         AND SYSDATE BETWEEN PA.EFFECTIVE_START_DATE AND
             NVL(PA.EFFECTIVE_END_DATE, TO_DATE('3000', 'YYYY'))
         AND SYSDATE BETWEEN POSI.EFFECTIVE_START_DATE AND
             NVL(POSI.EFFECTIVE_END_DATE, TO_DATE('3000', 'YYYY'))
         AND PAP.PERSON_ID=PA.PERSON_ID
         AND PAP.EFFECTIVE_END_DATE >  SYSDATE
		 AND BU.End_Date > SYSDATE 
			<if test="userNameSelect != null and ''!= userNameSelect">
			   AND pa.person_NAME like '%'|| #{userNameSelect} ||'%'
			</if>
			<if test="orgId != null and ''!= orgId">
			   AND   POSI.OU_ORGANIZATION_ID   IN 
			  ( 
		            SELECT CAB.USER_ID ORG_ID_CHILD  
		              FROM APPS.CUX_CDM_ACCESS_BASEDATA CAB
		             WHERE CAB.ACCESS_TYPE = '9'
		               AND CAB.ORG_ID =#{orgId} 
		               AND CAB.CUST_ACCOUNT_ID IN (2, 3)
		 	   )
			</if>
			<if test="channelType != null and ''!= channelType and '90'!= channelType">
			  AND  POSI.CHANNEL_TYPE = #{channelType}
			</if>
			 <if test="departmentCode != null and ''!= departmentCode">
			  AND  PA.HR_ORGANIZATION_ID  = #{departmentCode}
			</if>
			<if test="userId != null and ''!= userId">
			  AND bu.USER_ID = #{userId}
			</if>
			 <if test="personId != null and ''!= personId">
			  AND pa.PERSON_ID = #{personId}
			</if>
			order by pa.PRIMARY_FLAG desc
	</select>
	<select id="getPersonOrganizationByKpi" resultType="com.aus.common.model.PersonKpiDto" parameterType="com.aus.common.model.PersonKpiDto">
			SELECT BU.USER_ID                USER_ID,
			       BU.USER_NAME              USER_ACCOUNT,
			       PA.PERSON_ID,
			       PA.PERSON_NAME,
			       PA.HR_ORGANIZATION_ID DEPARTMENT_CODE,
			       POSI.HR_ORGANIZATION_NAME DEPARTMENT_NAME,
			       POSI.CHANNEL_TYPE,
			       CCT.CHANNEL_NAME,
			       POSI.OU_ORGANIZATION_ID   ORG_ID,
			       OU.ORGANIZATION_NAME      ORG_NAME,
			       POSI.POSITION_ID,
			       POSI.POSITION_NAME,
			       POSI.BUDGET_PRIVILEGE,
			       PA.PRIMARY_FLAG,
			       POSI.JOB_ID,POSI.PROVINCE
			  FROM (SELECT *
			          FROM AUPORTAL.BASE_USER BU1
			         WHERE NVL(BU1.END_DATE, TO_DATE('3000', 'YYYY')) >= TRUNC(SYSDATE)) BU,
			       AUPORTAL.BASE_HR_POSITION_ASSIGN_V PA,
			       AUPORTAL.BASE_HR_POSITION_V POSI,
			       AUPORTAL.BASE_ORGANIZATION_V OU,
			       (SELECT FV.FLEX_VALUE CHANNEL_TYPE, FV.DESCRIPTION CHANNEL_NAME
			          FROM APPS.FND_FLEX_VALUE_SETS FVS, APPS.FND_FLEX_VALUES_VL FV
			         WHERE FVS.FLEX_VALUE_SET_ID = FV.FLEX_VALUE_SET_ID
			           AND FVS.FLEX_VALUE_SET_NAME = 'CUX_CHANNEL_TYPE') CCT
			 WHERE BU.PERSON_ID = PA.PERSON_ID
			   AND PA.POSITION_ID = POSI.POSITION_ID
			   AND POSI.CHANNEL_TYPE = CCT.CHANNEL_TYPE
			   AND POSI.OU_ORGANIZATION_ID = OU.ORGANIZATION_ID
			   AND SYSDATE BETWEEN PA.PEOPLE_START_DATE AND
			       NVL(PA.PEOPLE_END_DATE, TO_DATE('3000', 'YYYY'))
			   AND SYSDATE BETWEEN PA.EFFECTIVE_START_DATE AND
			       NVL(PA.EFFECTIVE_END_DATE, TO_DATE('3000', 'YYYY'))
			   AND SYSDATE BETWEEN POSI.EFFECTIVE_START_DATE AND
			       NVL(POSI.EFFECTIVE_END_DATE, TO_DATE('3000', 'YYYY'))
			
		 
			<if test="org_id != null and ''!= org_id  ">
			   AND   POSI.OU_ORGANIZATION_ID   = #{org_id}
			</if>
			 <if test="person_id != null and ''!= person_id  ">
			   AND   PA.PERSON_ID  IN  
				 <foreach collection="idsArr" index="index" item="item" open="(" separator="," close=")">   
			        #{item}   
			     </foreach> 
			</if>
 
	</select>
	
	     <select id="getAllJob" resultMap="JobMap">
    SELECT JOB.JOB_ID,
       JOB.JOB_NAME 
       FROM AUPORTAL.BASE_HR_JOB_V JOB
  </select>
  
  
  	<select id="getPersonByKpiVerification" resultMap="PersonMap" parameterType="com.aus.common.model.PersonDto">
			SELECT BU.USER_ID                USER_ID,
			       BU.USER_NAME              USER_ACCOUNT,
			       PA.PERSON_ID,
			       PA.PERSON_NAME            USER_NAME,
			       PA.HR_ORGANIZATION_ID DEPARTMENT_CODE,
			       POSI.HR_ORGANIZATION_NAME DEPARTMENT_NAME,
			       POSI.CHANNEL_TYPE,
			       CCT.CHANNEL_NAME,
			       POSI.OU_ORGANIZATION_ID   ORG_ID,
			       OU.ORGANIZATION_NAME      ORG_NAME,
			       POSI.POSITION_ID,
			       POSI.POSITION_NAME,
			       POSI.BUDGET_PRIVILEGE,
			       PA.PRIMARY_FLAG,
			       POSI.JOB_ID
			  FROM (SELECT *
			          FROM AUPORTAL.BASE_USER BU1
			         WHERE NVL(BU1.END_DATE, TO_DATE('3000', 'YYYY')) >= TRUNC(SYSDATE)) BU,
			       AUPORTAL.BASE_HR_POSITION_ASSIGN_V PA,
			       AUPORTAL.BASE_HR_POSITION_V POSI,
			       AUPORTAL.BASE_ORGANIZATION_V OU,
			       (SELECT FV.FLEX_VALUE CHANNEL_TYPE, FV.DESCRIPTION CHANNEL_NAME
			          FROM APPS.FND_FLEX_VALUE_SETS FVS, APPS.FND_FLEX_VALUES_VL FV
			         WHERE FVS.FLEX_VALUE_SET_ID = FV.FLEX_VALUE_SET_ID
			           AND FVS.FLEX_VALUE_SET_NAME = 'CUX_CHANNEL_TYPE') CCT
			 WHERE BU.PERSON_ID = PA.PERSON_ID
			   AND PA.POSITION_ID = POSI.POSITION_ID
			   AND POSI.CHANNEL_TYPE = CCT.CHANNEL_TYPE
			   AND POSI.OU_ORGANIZATION_ID = OU.ORGANIZATION_ID
			   AND SYSDATE BETWEEN PA.PEOPLE_START_DATE AND
			       NVL(PA.PEOPLE_END_DATE, TO_DATE('3000', 'YYYY'))
			   AND SYSDATE BETWEEN PA.EFFECTIVE_START_DATE AND
			       NVL(PA.EFFECTIVE_END_DATE, TO_DATE('3000', 'YYYY'))
			   AND SYSDATE BETWEEN POSI.EFFECTIVE_START_DATE AND
			       NVL(POSI.EFFECTIVE_END_DATE, TO_DATE('3000', 'YYYY'))
			
			    AND   POSI.OU_ORGANIZATION_ID   = #{orgId}
			 	  AND pa.PERSON_ID = #{personId}
			  AND POSI.POSITION_ID =#{positionId}   
			 
	</select>
	
	<!-- 获取失效的用户 -->
	<select id="getInvalidUserBeforeDay" resultType="com.aus.common.model.PersonDto" parameterType="com.aus.common.model.PersonDto">
			 SELECT distinct BU.USER_ID                userId,
			                 PA.HR_ORGANIZATION_ID     departmentCode,
			                 POSI.HR_ORGANIZATION_NAME departmentName,
			                 POSI.OU_ORGANIZATION_ID   orgId,
			                 OU.ORGANIZATION_NAME      orgName,
			                 BU.USER_NAME              userAccount
			   FROM (SELECT *
			           FROM AUPORTAL.BASE_USER BU1
			          WHERE
			           <![CDATA[ NVL(BU1.END_DATE, TO_DATE('3000', 'YYYY')) = TRUNC(SYSDATE - 1)) BU,]]>
			        AUPORTAL.BASE_HR_POSITION_ASSIGN_V PA,
			        AUPORTAL.BASE_HR_POSITION_V POSI,
			        AUPORTAL.BASE_ORGANIZATION_V OU
			  WHERE BU.PERSON_ID = PA.PERSON_ID
			    AND PA.POSITION_ID = POSI.POSITION_ID
			    AND POSI.OU_ORGANIZATION_ID = OU.ORGANIZATION_ID
	</select>
	  <select id="selectHrPayTplPosition" resultType="java.util.HashMap" parameterType="java.util.Map" >
	SELECT POSI.POSITION_ID, 
	       POSI.POSITION_NAME, 
	       POSI.CHANNEL_TYPE, 
	       POSI.PROVINCE, 
	       POSI.BUDGET_PRIVILEGE, 
	       POSI.HR_ORGANIZATION_ID, 
	       POSI.OU_ORGANIZATION_ID
	FROM AUPORTAL.BASE_HR_POSITION_V POSI
	WHERE SYSDATE BETWEEN POSI.EFFECTIVE_START_DATE AND POSI.EFFECTIVE_END_DATE	
 	 <if test="orgId != null and ''!= orgId">
	 	   AND POSI.OU_ORGANIZATION_ID IN(
   SELECT CAB.USER_ID ORG_ID_CHILD  
		              FROM APPS.CUX_CDM_ACCESS_BASEDATA CAB
		             WHERE CAB.ACCESS_TYPE = '9'
		               AND CAB.ORG_ID =#{orgId}
		               AND CAB.CUST_ACCOUNT_ID IN (2
			        <if test="'Y'.toString()==levelTypeUp">
			 			,1
			 		</if> 
			        <if test="'Y'.toString()==levelTypeDown">
			 			,3
			 		</if>
			         )
 )
 	 </if> 
 	 <if test="channelCode != null and ''!= channelCode">
	 	  AND POSI.CHANNEL_TYPE = #{channelCode}
 	 </if>
 	 <if test="province != null and ''!= province">
	 	  AND POSI.PROVINCE LIKE '%'|| #{province} ||'%'
 	 </if> 
 	 <if test="positionName != null and ''!= positionName">
	 	  AND POSI.POSITION_NAME LIKE '%'|| #{positionName} ||'%'
 	 </if> 
 	 ORDER BY  POSI.OU_ORGANIZATION_ID,POSI.HR_ORGANIZATION_ID
  </select>
	
	
</mapper>